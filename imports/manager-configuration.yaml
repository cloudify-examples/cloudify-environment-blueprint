inputs:

  password:
    description: >
      Your manager password. If you do not provide one will be randomly generated, but it will not be displayed at the end.

  rpm:
    description: >
      If inputs.bootstrap is false, this is the CLI RPM to install and bootstrap with.
    default: http://repository.cloudifysource.org/cloudify/4.5.5/ga-release/cloudify-manager-install-4.5.5ga.rpm

  blueprints:
    default:
    - file: blueprint.yaml
      name: aws-example-network
      url: https://github.com/cloudify-community/blueprint-examples/releases/download/4.5.0/aws-example-network.zip
    - file: blueprint.yaml
      name: openstack-example-network
      url: https://github.com/cloudify-community/blueprint-examples/releases/download/4.5.0/openstack-example-network.zip
    - file: blueprint.yaml
      name: azure-example-network
      url: https://github.com/cloudify-community/blueprint-examples/releases/download/4.5.0/azure-example-network.zip
    - file: blueprint.yaml
      name: gcp-example-network
      url: https://github.com/cloudify-community/blueprint-examples/releases/download/4.5.0/gcp-example-network.zip

node_types:

  cloudify.nodes.Manager.EnvironmentSetup:
    derived_from: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_task
          inputs:
            tasks_file:
              default: scripts/manager/tasks.py
            task_name:
              default: create
            task_properties:
              default:
                private_ip: { get_input: private_ip }
                public_ip: { get_input: public_ip }
                rpm: { get_input: rpm }
                secrets: { get_input: secrets }
                blueprints: { get_input: blueprints }
                password: { get_input: password }
            fabric_env:
              default:
                host_string: { get_input: public_ip }
                user: { get_input: cloudify_image_username }
                key_filename: { get_input: cloudify_key_file  }

node_templates:

  ManagerSetup:
    type: cloudify.nodes.Manager.EnvironmentSetup
    relationships:
      - type: cloudify.relationships.depends_on
        target: cloudify_host
